
((TESTY::NAME . "SET-SOURCE-1") (TESTY::FILE-ON-DISK . "SET-SOURCE-1.test")
 (TESTY::DESCRIPTION
  . "Testing that (set-source) successfully changes the source of an already defined test, sourced by name, and also successfully changes the expected-result and, obviously, the compiled version as well")
 (TESTY::EXPECTATION . "EQ") (TESTY::TAGS)
 (TESTY::SOURCE LAMBDA NIL
                (LET ((TESTY::*TEST-NAMES* (MAKE-HASH-TABLE :TEST #'EQUALP))
                      (TESTY::*TEST-TAGS* (MAKE-HASH-TABLE :TEST #'EQUALP)))
                  (TESTY:TEST :NAME "a-test" :SOURCE (+ 1 1) :TAGS
                              '("woot" "poot") :EXPECTED-VALUE 2)
                  (TESTY:TEST :NAME "another-test" :SOURCE (+ 1 1) :TAGS
                              '("toot" "poot") :EXPECTED-VALUE 2)
                  (TESTY::SET-SOURCE "another-test" '(+ 2 2) 4)
                  (TESTY:RUN-TEST (TESTY:GET-TEST "another-test"))
                  (EQUALP (LIST '(LAMBDA () (+ 2 2)) 4 T)
                          (LIST (TESTY::SOURCE (TESTY:GET-TEST "another-test"))
                                (TESTY::RUN-VALUE
                                 (TESTY:GET-TEST "another-test"))
                                (TESTY::RESULT
                                 (TESTY:GET-TEST "another-test"))))))
 (TESTY::RE-EVALUATE) (TESTY::EXPECTED-VALUE . T) (TESTY::RUN-VALUE . T)
 (TESTY::RUN-TIME . 0.003) (TESTY::RESULT . T)
 (TESTY::BEFORE-FUNCTION-SOURCE LAMBDA NIL NIL)
 (TESTY::BEFORE-FUNCTION-RUN-STATUS . T)
 (TESTY::AFTER-FUNCTION-SOURCE LAMBDA NIL NIL)
 (TESTY::AFTER-FUNCTION-RUN-STATUS . T)) 